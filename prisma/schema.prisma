datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

generator client {
  provider = "prisma-client-js"
}

enum ROLE {
    SUPERADMIN
    ADMIN
    DOCTOR
    RECEPTIONIST
}

model User {
  id        Int     @id @default(autoincrement())
  email     String  @unique
  name      String
  lastName  String
  password  String
  role      ROLE
  createdAt DateTime @default(now())
  appointments Appointment[]
  reminders Reminder[]
  blockAppointments BlockAppointment[]
}

model Specialty {
  id          Int @id @default(autoincrement())
  label       String @unique
  appointments Appointment[]
}

model Patient {
  id          Int @id @default(autoincrement())
  fullName    String
  ci          String @unique
  phone       String
  clinicalHistory String @default("")
  createdAt   DateTime @default(now())
  appointments Appointment[]
}

model Appointment {
  id          Int @id @default(autoincrement()) 
  diagnostic  String
  startDate   DateTime
  endDate     DateTime
  createdAt   DateTime @default(now())
  specialtyId   Int
  specialty     Specialty @relation(fields: [specialtyId], references: [id])
  patientId   Int
  patient     Patient @relation(fields: [patientId], references: [id])
  doctorId    Int
  doctor      User @relation(fields: [doctorId], references: [id])
  eventId     Int?
  event       Event? @relation(fields: [eventId], references: [id])
}

model Reminder {
  id          Int @id @default(autoincrement())
  title       String
  reminder    String
  date        DateTime
  createdAt   DateTime @default(now())
  userId      Int
  user        User @relation(fields: [userId], references: [id])
}

model BlockAppointment {
  id          Int @id @default(autoincrement())
  doctorId    Int
  doctor      User @relation(fields: [doctorId], references: [id])
  startDate    DateTime
  endDate     DateTime
  reason      String?
  createdAt   DateTime @default(now())
}

model Event {
  id          Int @id @default(autoincrement())
  title       String
  color       String
  appointments Appointment[]
}